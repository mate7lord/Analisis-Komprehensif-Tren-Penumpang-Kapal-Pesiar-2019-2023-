# -*- coding: utf-8 -*-
"""Comprehensive_Analysis_and_Forecasting_of_Cruise_Ship_Passenger_Trends_and_Demographics_(2019_2023) (1).ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1KSr9YI9XXoTKDXdqG6Us2LSMtV-RkIXI

# Latar Belakang
 Industri kapal pesiar adalah sektor yang penting dalam pariwisata global. Dengan memahami pola perjalanan dan profil penumpang, perusahaan dapat membuat keputusan yang lebih baik dalam perencanaan operasional dan pemasaran.

# Tujuan

Proyek ini bertujuan untuk menganalisis data penumpang kapal pesiar dari lima pelabuhan utama dari tahun 2019 hingga 2023. Analisis ini mencakup pembersihan data, analisis deskriptif, analisis tren, rute populer, profil penumpang dan crew, prediksi jumlah penumpang, analisis musiman, dan segmentasi penumpang.
"""

# Import library yang diperlukan
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_absolute_error, mean_squared_error
from statsmodels.tsa.seasonal import seasonal_decompose
from sklearn.cluster import KMeans

# Memuat dataset
file_path = 'data-penumpang-5-pelabuhan-cruise_imigrasi_2019-2023.csv'
data = pd.read_csv(file_path)

# Memeriksa informasi awal tentang dataset
print("Informasi Dataset:")
print(data.info())

# Menampilkan beberapa baris pertama untuk memahami struktur data
print("\nBeberapa Baris Pertama dari Dataset:")
print(data.head())

"""# Pembersihan Data

- Mengganti Nilai Kosong dan Tanda '-': Mengganti nilai kosong dan tanda '-' dengan NaN untuk mengidentifikasi data yang hilang.
- Konversi Tipe Data: Mengubah kolom yang seharusnya numerik dari string menjadi tipe data numerik.
- Konversi Tanggal: Mengubah format tanggal dari bahasa Indonesia ke bahasa Inggris dan mengonversinya menjadi tipe datetime.
"""

# Mengganti string kosong dan tanda '-' dengan NaN
data.replace(["", "-"], np.nan, inplace=True)

# Mengubah kolom yang seharusnya numerik
numerical_columns = ['Jml Penumpang WNA', 'Jml Penumpang WNI', 'Jumlah Penumpang', 'Jml Crew WNA', 'Jml Crew WNI', 'Jumlah Crew']
for col in numerical_columns:
    data[col] = data[col].astype(str).str.replace(',', '').astype(float)

# Mengubah kolom tanggal menjadi bahasa Inggris
bulan_dict = {
    "Januari": "January",
    "Februari": "February",
    "Maret": "March",
    "April": "April",
    "Mei": "May",
    "Juni": "June",
    "Juli": "July",
    "Agustus": "August",
    "September": "September",
    "Oktober": "October",
    "November": "November",
    "Desember": "December"
}

def convert_bulan(tanggal):
    if isinstance(tanggal, str):
        for bulan_id, bulan_en in bulan_dict.items():
            tanggal = tanggal.replace(bulan_id, bulan_en)
    return tanggal

# Mengubah kolom tanggal menjadi tipe datetime
date_columns = ['Tanggal Keberangkatan', 'Tanggal Kedatangan']
for col in date_columns:
    data[col] = data[col].apply(convert_bulan)
    data[col] = pd.to_datetime(data[col], format='%d %B %Y', errors='coerce')

# Menampilkan informasi dataset setelah pembersihan
print("\nInformasi Dataset Setelah Pembersihan:")
print(data.info())

# Menampilkan beberapa baris pertama setelah pembersihan
print("\nBeberapa Baris Pertama Setelah Pembersihan:")
print(data.head())

"""# Analisis Deskriptif Awal

- Statistik Deskriptif: Menghitung statistik deskriptif dasar untuk memahami distribusi data.
- Visualisasi Distribusi: Membuat visualisasi distribusi jumlah penumpang dan crew untuk melihat variasi dalam dataset.
"""

# Menghitung statistik deskriptif dasar
print("\nStatistik Deskriptif:")
print(data.describe())

# Visualisasi distribusi jumlah penumpang dan crew
plt.figure(figsize=(12, 6))
plt.subplot(1, 2, 1)
sns.histplot(data['Jumlah Penumpang'].dropna(), kde=True)
plt.title('Distribusi Jumlah Penumpang')
plt.subplot(1, 2, 2)
sns.histplot(data['Jumlah Crew'].dropna(), kde=True)
plt.title('Distribusi Jumlah Crew')
plt.tight_layout()
plt.show()

"""# Analisis Tren Wisata Kapal Pesiar

Menghitung jumlah penumpang dan crew per tahun dan membuat visualisasi tren tahunan.
"""

# Menghitung jumlah penumpang dan crew per tahun
data['Tahun Keberangkatan'] = data['Tanggal Keberangkatan'].dt.year
annual_passenger_trend = data.groupby('Tahun Keberangkatan')['Jumlah Penumpang'].sum()
annual_crew_trend = data.groupby('Tahun Keberangkatan')['Jumlah Crew'].sum()

# Visualisasi tren tahunan
plt.figure(figsize=(14, 7))
annual_passenger_trend.plot(label='Jumlah Penumpang', marker='o')
annual_crew_trend.plot(label='Jumlah Crew', marker='o')
plt.title('Tren Tahunan Jumlah Penumpang dan Crew')
plt.xlabel('Tahun')
plt.ylabel('Jumlah')
plt.legend()
plt.grid(True)
plt.show()

"""# Analisis Rute Populer

Mengidentifikasi rute-rute kapal pesiar yang paling populer dan membuat visualisasi 10 rute paling populer berdasarkan jumlah keberangkatan.
"""

# Mengidentifikasi rute-rute populer
route_counts = data['Rute Kapal Pesiar'].value_counts()

# Visualisasi rute populer
plt.figure(figsize=(12, 6))
route_counts.head(10).plot(kind='bar')
plt.title('10 Rute Kapal Pesiar Paling Populer')
plt.xlabel('Rute Kapal Pesiar')
plt.ylabel('Jumlah Keberangkatan')
plt.xticks(rotation=45)
plt.show()

"""# Profil Penumpang dan Crew

- Analisis Demografis: Menganalisis profil demografis penumpang dan crew dengan menghitung jumlah penumpang dan crew WNA serta WNI.
- Visualisasi Profil Demografis: Membuat visualisasi distribusi penumpang dan crew berdasarkan kewarganegaraan.
"""

# Profil demografis penumpang dan crew
wna_wni_counts = data[['Jml Penumpang WNA', 'Jml Penumpang WNI', 'Jml Crew WNA', 'Jml Crew WNI']].sum()

# Visualisasi profil demografis
plt.figure(figsize=(12, 6))
plt.subplot(1, 2, 1)
wna_wni_counts[['Jml Penumpang WNA', 'Jml Penumpang WNI']].plot(kind='pie', autopct='%1.1f%%', startangle=140)
plt.title('Distribusi Penumpang WNA vs WNI')
plt.ylabel('')
plt.subplot(1, 2, 2)
wna_wni_counts[['Jml Crew WNA', 'Jml Crew WNI']].plot(kind='pie', autopct='%1.1f%%', startangle=140)
plt.title('Distribusi Crew WNA vs WNI')
plt.ylabel('')
plt.tight_layout()
plt.show()

"""# Prediksi Jumlah Penumpang

- Model Prediksi: Membangun model regresi linier untuk memprediksi jumlah penumpang berdasarkan tahun keberangkatan.
- Evaluasi Model: Mengevaluasi kinerja model menggunakan metrik MAE, MSE, dan RMSE.
- Visualisasi Prediksi: Membuat visualisasi prediksi vs data aktual.
"""

# Menghapus baris dengan nilai NaN pada fitur atau target
data_clean = data.dropna(subset=['Tahun Keberangkatan', 'Jumlah Penumpang'])

# Menggunakan tahun sebagai fitur prediksi
X = data_clean[['Tahun Keberangkatan']]
y = data_clean['Jumlah Penumpang']

# Membagi data menjadi set pelatihan dan pengujian
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Membangun model regresi linier
model = LinearRegression()
model.fit(X_train, y_train)

# Prediksi pada data uji
y_pred = model.predict(X_test)

# Evaluasi model
mae = mean_absolute_error(y_test, y_pred)
mse = mean_squared_error(y_test, y_pred)
rmse = np.sqrt(mse)

print(f"MAE: {mae}, MSE: {mse}, RMSE: {rmse}")

# Visualisasi prediksi vs data aktual
plt.figure(figsize=(10, 6))
plt.scatter(X_test, y_test, color='blue', label='Aktual')
plt.scatter(X_test, y_pred, color='red', label='Prediksi')
plt.plot(X_test, y_pred, color='red', linewidth=2)
plt.title('Prediksi Jumlah Penumpang vs Data Aktual')
plt.xlabel('Tahun Keberangkatan')
plt.ylabel('Jumlah Penumpang')
plt.legend()
plt.show()

"""# Analisis Dampak Musiman

Menganalisis komponen musiman dalam data dengan menggunakan dekomposisi deret waktu. Dekomposisi ini akan memisahkan data menjadi tren, musiman, dan residu.
"""

# Agregasi data bulanan
data['Bulan Keberangkatan'] = data['Tanggal Keberangkatan'].dt.to_period('M')
monthly_passenger_trend = data.groupby('Bulan Keberangkatan')['Jumlah Penumpang'].sum()

# Konversi data periodik ke timestamp
monthly_passenger_trend = monthly_passenger_trend.to_timestamp()

# Dekomposisi
decomposition = seasonal_decompose(monthly_passenger_trend, model='additive', period=12)
fig = decomposition.plot()
fig.set_size_inches(14, 10)
plt.show()

"""# Segmentasi Penumpang

Melakukan segmentasi penumpang berdasarkan jumlah penumpang WNA dan WNI menggunakan algoritma K-Means. Segmentasi ini membantu dalam mengidentifikasi kelompok penumpang yang berbeda untuk strategi pemasaran yang lebih efektif.
"""

# Menggunakan jumlah penumpang WNA dan WNI sebagai fitur clustering
X = data[['Jml Penumpang WNA', 'Jml Penumpang WNI']].dropna()

# Menentukan jumlah klaster
kmeans = KMeans(n_clusters=3, random_state=42)
clusters = kmeans.fit_predict(X)

# Menambahkan kolom klaster ke dalam data
data['Klaster Penumpang'] = np.nan
data.loc[X.index, 'Klaster Penumpang'] = clusters

# Visualisasi klaster
plt.figure(figsize=(10, 6))
sns.scatterplot(x='Jml Penumpang WNA', y='Jml Penumpang WNI', hue='Klaster Penumpang', data=data, palette='viridis')
plt.title('Segmentasi Penumpang Berdasarkan Jumlah WNA dan WNI')
plt.show()

"""## Kesimpulan

### 1. Pembersihan Data
 Pembersihan data yang efektif telah dilakukan untuk memastikan kualitas dan konsistensi data. Penggantian nilai kosong dan tanda '-' dengan NaN, konversi tipe data, serta pengubahan format tanggal telah dilakukan untuk mempersiapkan data untuk analisis lebih lanjut.

### 2. Analisis Deskriptif Awal
Statistik deskriptif dasar memberikan gambaran tentang distribusi data, termasuk rata-rata, standar deviasi, nilai minimum dan maksimum untuk jumlah penumpang dan crew. Visualisasi distribusi menunjukkan variasi besar dalam data, yang penting untuk dipahami sebelum melakukan analisis lebih mendalam.

### 3. Analisis Tren Wisata Kapal Pesiar
 Analisis tren tahunan mengungkapkan bagaimana jumlah penumpang dan crew berubah dari tahun ke tahun. Ini membantu mengidentifikasi pola dan tren jangka panjang yang relevan untuk perencanaan strategis.

### 4. Analisis Rute Populer
Mengidentifikasi rute-rute kapal pesiar yang paling sering digunakan menunjukkan preferensi perjalanan penumpang. Ini dapat digunakan untuk mengoptimalkan rute dan jadwal kapal pesiar guna meningkatkan efisiensi operasional.

### 5. Profil Penumpang dan Crew
Analisis demografis memberikan wawasan tentang komposisi penumpang dan crew berdasarkan kewarganegaraan. Distribusi penumpang dan crew WNA serta WNI menunjukkan segmen pasar yang berbeda, yang penting untuk strategi pemasaran dan pelayanan.

### 6. Prediksi Jumlah Penumpang
Model regresi linier telah dibangun untuk memprediksi jumlah penumpang berdasarkan tahun keberangkatan. Hasil prediksi menunjukkan bahwa model ini dapat digunakan untuk perencanaan kapasitas dan sumber daya di masa depan. Evaluasi model menggunakan metrik MAE, MSE, dan RMSE menunjukkan kinerja model yang cukup baik.

### 7. Analisis Dampak Musiman
Dekomposisi deret waktu mengidentifikasi komponen musiman dalam data. Ini penting untuk memahami fluktuasi musiman dan merencanakan operasional yang lebih efektif.

### 8. Segmentasi Penumpang
Segmentasi penumpang menggunakan algoritma K-Means mengelompokkan penumpang berdasarkan jumlah penumpang WNA dan WNI. Ini membantu dalam mengarahkan strategi pemasaran dan pelayanan yang lebih terarah kepada kelompok penumpang yang berbeda.

## Rekomendasi

### 1. Optimasi Rute dan Jadwal
Prioritaskan rute-rute populer yang diidentifikasi dalam analisis ini. Sesuaikan jadwal kapal pesiar berdasarkan tren musiman untuk meningkatkan efisiensi operasional dan mengakomodasi permintaan penumpang dengan lebih baik.

### 2. Segmentasi Pasar
Gunakan hasil segmentasi penumpang untuk menargetkan strategi pemasaran yang lebih efektif. Fokus pada kebutuhan dan preferensi spesifik dari setiap segmen penumpang untuk meningkatkan kepuasan pelanggan dan loyalitas.

### 3. Perencanaan Kapasitas
 Manfaatkan model prediksi jumlah penumpang untuk perencanaan kapasitas dan sumber daya di masa depan. Hal ini akan membantu dalam memastikan bahwa kapasitas kapal pesiar sesuai dengan permintaan dan mengurangi risiko overbooking atau underutilization.

### 4. Strategi Pemasaran
Arahkan strategi pemasaran berdasarkan tren dan preferensi yang diidentifikasi dalam analisis rute populer dan profil penumpang. Kampanye pemasaran yang lebih terarah dapat meningkatkan efektivitas dan efisiensi biaya pemasaran.

### 5. Perencanaan Operasional
 Gunakan hasil analisis musiman untuk merencanakan operasional yang lebih efektif. Identifikasi periode puncak dan sepi untuk menyesuaikan sumber daya dan layanan, memastikan bahwa operasional berjalan lancar sepanjang tahun.

### 6. Pengembangan Layanan
Berdasarkan profil demografis penumpang dan crew, kembangkan layanan yang disesuaikan dengan kebutuhan spesifik dari kelompok penumpang yang berbeda. Ini dapat meningkatkan pengalaman pelanggan dan menarik lebih banyak penumpang.
"""